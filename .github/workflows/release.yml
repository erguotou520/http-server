# .github/workflows/release.yml

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          # - target: x86_64-apple-darwin
          #   archive: zip
    steps:
      - uses: actions/checkout@v4
      - name: Compile and release
        id: compile
        uses: rust-build/rust-build.action@v1.4.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # MACOSX_SDK_VERSION: 10.15
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.compile.outputs.BUILT_ARCHIVE }}
          # asset_name: ${{ steps.compile.outputs.BUILT_ARCHIVE }}
          overwrite: true
          tag: build-${{ github.ref }}
  release-mac:
    name: release x86_64-apple-darwin
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
          rustup install stable
          cargo --version
      - name: Install dependencies
        run: cargo build --all --release && strip target/release/hs && zip -rj target/release/x86_64-apple-darwin.zip target/release/hs
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/x86_64-apple-darwin.zip
          asset_name: x86_64-apple-darwin.zip
          overwrite: true
          tag: build-${{ github.ref }}